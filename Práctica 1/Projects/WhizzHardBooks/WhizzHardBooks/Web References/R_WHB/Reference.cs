//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.18444
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.18444.
// 
#pragma warning disable 1591

namespace WhizzHardBooks.R_WHB {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WS_WHBSoap", Namespace="http://localhost/WS_WHB")]
    public partial class WS_WHB : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback inscribirLibroOperationCompleted;
        
        private System.Threading.SendOrPostCallback registrarClienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback llenarConsultarLibrosOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WS_WHB() {
            this.Url = global::WhizzHardBooks.Properties.Settings.Default.WhizzHardBooks_R_WHB_WS_WHB;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event inscribirLibroCompletedEventHandler inscribirLibroCompleted;
        
        /// <remarks/>
        public event registrarClienteCompletedEventHandler registrarClienteCompleted;
        
        /// <remarks/>
        public event llenarConsultarLibrosCompletedEventHandler llenarConsultarLibrosCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/WS_WHB/HelloWorld", RequestNamespace="http://localhost/WS_WHB", ResponseNamespace="http://localhost/WS_WHB", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/WS_WHB/inscribirLibro", RequestNamespace="http://localhost/WS_WHB", ResponseNamespace="http://localhost/WS_WHB", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool inscribirLibro(int id, string tit, int exi, int pag, string tem, string aut) {
            object[] results = this.Invoke("inscribirLibro", new object[] {
                        id,
                        tit,
                        exi,
                        pag,
                        tem,
                        aut});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void inscribirLibroAsync(int id, string tit, int exi, int pag, string tem, string aut) {
            this.inscribirLibroAsync(id, tit, exi, pag, tem, aut, null);
        }
        
        /// <remarks/>
        public void inscribirLibroAsync(int id, string tit, int exi, int pag, string tem, string aut, object userState) {
            if ((this.inscribirLibroOperationCompleted == null)) {
                this.inscribirLibroOperationCompleted = new System.Threading.SendOrPostCallback(this.OninscribirLibroOperationCompleted);
            }
            this.InvokeAsync("inscribirLibro", new object[] {
                        id,
                        tit,
                        exi,
                        pag,
                        tem,
                        aut}, this.inscribirLibroOperationCompleted, userState);
        }
        
        private void OninscribirLibroOperationCompleted(object arg) {
            if ((this.inscribirLibroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.inscribirLibroCompleted(this, new inscribirLibroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/WS_WHB/registrarCliente", RequestNamespace="http://localhost/WS_WHB", ResponseNamespace="http://localhost/WS_WHB", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool registrarCliente(int car, string nom, int dpi, string dir, int tel) {
            object[] results = this.Invoke("registrarCliente", new object[] {
                        car,
                        nom,
                        dpi,
                        dir,
                        tel});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void registrarClienteAsync(int car, string nom, int dpi, string dir, int tel) {
            this.registrarClienteAsync(car, nom, dpi, dir, tel, null);
        }
        
        /// <remarks/>
        public void registrarClienteAsync(int car, string nom, int dpi, string dir, int tel, object userState) {
            if ((this.registrarClienteOperationCompleted == null)) {
                this.registrarClienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnregistrarClienteOperationCompleted);
            }
            this.InvokeAsync("registrarCliente", new object[] {
                        car,
                        nom,
                        dpi,
                        dir,
                        tel}, this.registrarClienteOperationCompleted, userState);
        }
        
        private void OnregistrarClienteOperationCompleted(object arg) {
            if ((this.registrarClienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.registrarClienteCompleted(this, new registrarClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://localhost/WS_WHB/llenarConsultarLibros", RequestNamespace="http://localhost/WS_WHB", ResponseNamespace="http://localhost/WS_WHB", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet llenarConsultarLibros() {
            object[] results = this.Invoke("llenarConsultarLibros", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void llenarConsultarLibrosAsync() {
            this.llenarConsultarLibrosAsync(null);
        }
        
        /// <remarks/>
        public void llenarConsultarLibrosAsync(object userState) {
            if ((this.llenarConsultarLibrosOperationCompleted == null)) {
                this.llenarConsultarLibrosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnllenarConsultarLibrosOperationCompleted);
            }
            this.InvokeAsync("llenarConsultarLibros", new object[0], this.llenarConsultarLibrosOperationCompleted, userState);
        }
        
        private void OnllenarConsultarLibrosOperationCompleted(object arg) {
            if ((this.llenarConsultarLibrosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.llenarConsultarLibrosCompleted(this, new llenarConsultarLibrosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void inscribirLibroCompletedEventHandler(object sender, inscribirLibroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class inscribirLibroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal inscribirLibroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void registrarClienteCompletedEventHandler(object sender, registrarClienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class registrarClienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal registrarClienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void llenarConsultarLibrosCompletedEventHandler(object sender, llenarConsultarLibrosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class llenarConsultarLibrosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal llenarConsultarLibrosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591